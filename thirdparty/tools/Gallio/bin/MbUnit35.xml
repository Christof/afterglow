<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>MbUnit35</name>
  </assembly>
  <members>
    <member name="T:MbUnit.Framework.AssertEx">
      <summary>Provides extended assertions for .Net 3.5. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:MbUnit.Framework.AssertEx.That(System.Linq.Expressions.Expression{System.Func{System.Boolean}})">
      <summary>
        <para> Verifies that a particular condition holds true. </para>
        <para> If the condition evaluates to false, the assertion failure message will describe in detail the intermediate value of relevant sub-expressions within the condition. Consequently the assertion failure will include more diagnostic information than if <see cref="M:MbUnit.Framework.Assert.IsTrue(System.Boolean)" /> were used instead. </para>
      </summary>
      <param name="condition">The conditional expression to evaluate</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="condition" /> is null</exception>
      <exception cref="T:Gallio.Framework.Assertions.AssertionException">Thrown if the verification failed unless the current <see cref="P:Gallio.Framework.Assertions.AssertionContext.AssertionFailureBehavior" /> indicates otherwise</exception>
    </member>
    <member name="M:MbUnit.Framework.AssertEx.That(System.Linq.Expressions.Expression{System.Func{System.Boolean}},System.String,System.Object[])">
      <summary>
        <para> Verifies that a particular condition holds true. </para>
        <para> If the condition evaluates to false, the assertion failure message will describe in detail the intermediate value of relevant sub-expressions within the condition. Consequently the assertion failure will include more diagnostic information than if <see cref="M:MbUnit.Framework.Assert.IsTrue(System.Boolean,System.String,System.Object[])" /> were used instead. </para>
      </summary>
      <param name="condition">The conditional expression to evaluate</param>
      <param name="messageFormat">The custom assertion message format, or null if none</param>
      <param name="messageArgs">The custom assertion message arguments, or null if none</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="condition" /> is null</exception>
      <exception cref="T:Gallio.Framework.Assertions.AssertionException">Thrown if the verification failed unless the current <see cref="P:Gallio.Framework.Assertions.AssertionContext.AssertionFailureBehavior" /> indicates otherwise</exception>
    </member>
  </members>
</doc>