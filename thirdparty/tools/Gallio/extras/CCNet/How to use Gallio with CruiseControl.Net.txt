How to use Gallio with CruiseControl.Net
========================================

Using Gallio in CruiseControl.Net is very straightforward.


CONFIGURING THE SERVER
----------------------

For the server, we need to ensure that the build script runs the tests and generates an XML
formatted Gallio Test Report that is then merged into the CruiseControl.Net artifacts file
with the <merge> publisher task.

You can use any of the supported Gallio test runners to run your tests such as Gallio.Echo,
Gallio.MSBuildTasks, Gallio.NAntTasks or Gallio.PowerShellCmdlet.  The important thing is
to provide appropriate arguments to the test runner such that an XML report is generated
so that the test results can be saved for subsequent display in the dashboard.

Here is one way to do this:

1. Edit the "ccnet.config" file in the CruiseControl.Net "server" folder.

     * Within the <tasks> element, add an element similar to the following AFTER the tasks that
       build your project.  This will run the tests in your test assembly and generate an
       XML test report in the project working directory.

         <exec>
            <executable>$$$PathToGallioInstallationFolder$$$\bin\Gallio.Echo.exe</executable>
            <buildArgs>/rnf:test-report /rt:Xml-Inline /v:Quiet $$$MyTestAssembly.dll$$$</buildArgs>
         </exec>

     * Within the <publishers> element, add an element similar to the following BEFORE the
       <xmllogger> task element.  This will merge the XML test report into the build artifacts.

          <merge><files><file>test-report.xml</file></files></merge>

2. Double-check:

     * The XML test report is being generated as part of a build task.
     * The XML test report is being merged into the CruiseControl.Net artifacts file
       as part of a publisher task.

3. There is normally no need to restart the CruiseControl.Net server since it automatically
   detects changes to the "ccnet.config" file.


CONFIGURING THE DASHBOARD
-------------------------

For the dashboard, we need to add some new resources that are used to render the Gallio Test Report
we must update the dashboard configuration file to include the new test report plugin.

1. Copy the entire contents of the "extras\CCNet\webdashboard" folder from the Gallio
   installation direction into the "webdashboard" folder of your CruiseControl.Net
   installation.

   If you have customized your "templates/SiteTemplates.vm" file, you may wish edit it
   manually instead of overwriting it.  Add the following DTD declaraction to the top of
   this file:

      <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/loose.dtd">


2. Edit the "dashboard.config" file in the CruiseControl.Net "webdashboard" folder.

     * Within the <buildPlugins> element, add the following elements:

          <xslReportBuildPlugin description="Gallio Test Report"
                                actionName="GallioTestReport"
                                xslFileName="gallio\xsl\Gallio-Report.ccnet-details.xsl" />
          <xslReportBuildPlugin description="Gallio Test Report (Condensed)"
                                actionName="GallioTestReportCondensed"
                                xslFileName="gallio\xsl\Gallio-Report.ccnet-details-condensed.xsl" />
          <gallioAttachmentBuildPlugin />

3. Double-check:

     * The "webdashboard" folder now contains "gallio\css", "gallio\img", "gallio\js", "gallio\xml".
     * The "webdashboard" folder now contains "bin\CCNet.Gallio.WebDashboard.Plugin.dll".
     * The "webdashboard" folder now contains "templates\SiteTemplate.vm" with an updated DTD declaration.
     * The "dashboard.config" file has been edited to include the new build report section.

4. Restart the CruiseControl.Net web application.  (eg. By resetting IIS.)

Note:

  It can happen that the plugin distributed with Gallio is incompatible with the version
  of CruiseControl.Net that you have installed.   The dashboard may fail to start in this
  case.

  In this case you may choose to omit the <gallioAttachmentBuildPlugin /> element and
  delete the plugin dll from your dashboard's bin directory which will cause attachments and
  images within the Gallio reports to not be displayed.

  Or you may choose to recompile the plugin yourself by checking out the Gallio source tree,
  replacing the version of the CruiseControl.Net libraries in the "src\Extensions\CCNet\libs"
  folder and running the "Build.bat" file.


Usage Remark:

  The full Gallio report may be quite large and take a long time to load because it includes
  all test results.  In contrast, the "Condensed" report excludes passing tests so it is
  often somewhat easier to work with when there are only a few failures in a large test suite.
